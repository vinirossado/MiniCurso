// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyHome.Infra.Data.Context;

namespace MyHome.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20181226132724_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyHome.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClienteAppId");

                    b.Property<int?>("CodigoAlteracaoSenha");

                    b.Property<int?>("CodigoVerificacao");

                    b.Property<DateTime?>("DataConfirmacao");

                    b.Property<string>("Email");

                    b.Property<string>("FacebookId");

                    b.Property<string>("GoogleId");

                    b.Property<string>("Imagem");

                    b.Property<string>("Nome");

                    b.Property<string>("Perfil");

                    b.Property<string>("Senha");

                    b.Property<string>("Token");

                    b.Property<DateTime?>("ValidadeCodigo");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("MyHome.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClienteAppId");

                    b.Property<int?>("CodigoAlteracaoSenha");

                    b.Property<int?>("CodigoVerificacao");

                    b.Property<string>("Cpf");

                    b.Property<DateTime?>("DataConfirmacao");

                    b.Property<DateTime?>("DataNascimento");

                    b.Property<string>("Email");

                    b.Property<string>("FacebookId");

                    b.Property<string>("GoogleId");

                    b.Property<string>("Imagem");

                    b.Property<string>("Nome");

                    b.Property<string>("Observacao");

                    b.Property<string>("Perfil");

                    b.Property<string>("Senha");

                    b.Property<string>("TelefoneFixo");

                    b.Property<string>("TelefoneMovel");

                    b.Property<string>("Token");

                    b.Property<DateTime?>("ValidadeCodigo");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MyHome.Empreendimento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaPrivativa");

                    b.Property<string>("Background");

                    b.Property<string>("Cidade");

                    b.Property<long>("ClienteAppId");

                    b.Property<string>("Descricao");

                    b.Property<string>("LazerJson");

                    b.Property<string>("MarcadorPrimeiro");

                    b.Property<string>("MarcadorSegundo");

                    b.Property<string>("MarcadorTerceiro");

                    b.Property<string>("Nome");

                    b.Property<string>("NumeroAndares");

                    b.Property<string>("NumeroElevadores");

                    b.Property<string>("NumeroQuartos");

                    b.Property<string>("NumeroTorres");

                    b.Property<string>("NumeroUnidades");

                    b.Property<string>("NumeroVagas");

                    b.Property<string>("UnidadesPorAndar");

                    b.HasKey("Id");

                    b.ToTable("Empreendimentos");
                });

            modelBuilder.Entity("MyHome.RecursoGrafico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClienteAppId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<long>("EmpreendimentoId");

                    b.Property<string>("Recurso");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("RecursosGraficos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("RecursoGrafico");
                });

            modelBuilder.Entity("MyHome.Galeria", b =>
                {
                    b.HasBaseType("MyHome.RecursoGrafico");

                    b.Property<string>("RecursoFull");

                    b.HasIndex("EmpreendimentoId");

                    b.HasDiscriminator().HasValue("Galeria");
                });

            modelBuilder.Entity("MyHome.Planta", b =>
                {
                    b.HasBaseType("MyHome.RecursoGrafico");

                    b.HasIndex("EmpreendimentoId")
                        .HasName("IX_RecursosGraficos_EmpreendimentoId1");

                    b.ToTable("Plantas");

                    b.HasDiscriminator().HasValue("Planta");
                });

            modelBuilder.Entity("MyHome.Galeria", b =>
                {
                    b.HasOne("MyHome.Empreendimento", "Empreendimento")
                        .WithMany("Galerias")
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyHome.Planta", b =>
                {
                    b.HasOne("MyHome.Empreendimento", "Empreendimento")
                        .WithMany("Plantas")
                        .HasForeignKey("EmpreendimentoId")
                        .HasConstraintName("FK_RecursosGraficos_Empreendimentos_EmpreendimentoId1")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
